{"version":3,"sources":["components/CstAppBar.jsx","components/LoginForm.js","components/subcomponents/Cell.js","components/subcomponents/Event.js","components/DateNav.js","components/Calendar.js","components/RequestForm.js","components/SlideMenu.js","components/Schedule.js","App.js","index.js"],"names":["redirectTo","history","path","push","CstAppBar","menuIcon","disabled","label","closeRedirect","useRef","checkbox1","checkbox2","useState","checkedBoxes","updateBoxes","useHistory","location","useLocation","pathname","includes","drawerState","toggleDrawer","handleCheckbox","current","checked","useEffect","AppBar","color","Toolbar","IconButton","edge","onClick","Typography","variant","SwipeableDrawer","open","onOpen","onClose","disableSwipeToOpen","List","component","ListItem","button","selected","style","marginTop","Checkbox","inputRef","onChange","divider","fetch","method","mode","credentials","then","response","text","logOut","defaultProps","LoginForm","console","log","email","pass","loginInfo","newLogin","loginError","updateLoginError","handleSubmit","formData","loginEmail","loginPass","validationStatus","validEmail","validPass","headers","body","JSON","stringify","status","json","emailError","passError","changeStatus","fastValidation","enableFastValidation","validateInput","prevState","indexOf","textboxStyles","makeStyles","root","paddingBottom","useStyles","display","flexDirection","alignItems","id","aria-label","width","maxWidth","TextField","className","autoFocus","fullWidth","inputProps","type","form","name","event","target","value","onBlur","error","helperText","onKeyPress","key","handleKeyPress","Button","size","alignSelf","borderTop","borderColor","height","justifyContent","Cell","React","forwardRef","props","ref","classes","theme","availability","backgroundColor","shift","palette","secondary","light","timeToNum","time","split","compareDates","date1","date2","getDate","getMonth","getFullYear","Event","wrapper","Date","date","calendarDate","startTime","currentTimeNum","endTime","toggleLive","liveSession","getHours","getMinutes","marginRight","position","top","offset","bottom","right","Card","CardContent","padding","Avatar","fontSize","CardActionArea","paddingTop","DateNav","updateDate","changeDate","handleDateUpdate","op","placeholder","setDate","Paper","square","calculatePosition","topLimit","bottomLimit","hours","minutes","String","Math","round","Calendar","firstCell","lastCell","cellPos","first","last","cellsRendered","toggleCellsRendered","lineTimer","lineOffset","changeOffset","displayLine","toggleLine","shifts","updateShifts","availabilityJSON","requestsJSON","a","userType","buildEvents","requests","prev","concat","shiftsArray","eventType","map","item","startTimeParsed","endTimeParsed","undefined","unavailableFrom","unavailableTo","availableDate","requestDate","session_id","toString","updateLine","setTimeout","DT","offsetTop","requestEvents","clearTimeout","border","margin","RequestForm","day","month","year","practicalType","noteTakingType","details","timeOptions","dateOptions","hour","minute","i","HHMM","action","htmlFor","with","cols","rows","maxLength","appBar","title","marginLeft","spacing","flex","Transition","Slide","direction","FullScreenDialog","setOpen","handleClose","Fab","Dialog","fullScreen","TransitionComponent","Schedule","updateUserType","userTypeStr","updateUserTypeStr","fetchIsAuth","App","exact","createMuiTheme","primary","main","dark","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.081f7ef0.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  SwipeableDrawer,\r\n  List,\r\n  ListItem,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\n\r\nfunction redirectTo(history, path) {\r\n  history.push(path);\r\n}\r\n\r\nfunction logOut(history) {\r\n  fetch(\"http://localhost:5000/login/logout\", {\r\n    method: \"GET\",\r\n    mode: \"cors\",\r\n    credentials: \"include\",\r\n  })\r\n    .then((response) => {\r\n      return response.text();\r\n    })\r\n    .then((response) => {\r\n      if (response === \"logout_success\") redirectTo(history, \"/\");\r\n    });\r\n}\r\n\r\nconst CstAppBar = () => {\r\n  let closeRedirect = useRef(\"/dashboard/schedule\");\r\n\r\n  const checkbox1 = useRef();\r\n  const checkbox2 = useRef();\r\n  const [checkedBoxes, updateBoxes] = useState({\r\n    checkbox1: true,\r\n    checkbox2: false,\r\n  });\r\n\r\n  let menuIcon;\r\n  let disabled;\r\n\r\n  const history = useHistory();\r\n  let location = useLocation();\r\n  if (location.pathname !== \"/\") {\r\n    menuIcon = <MenuIcon />;\r\n    disabled = false;\r\n  }\r\n\r\n  let label;\r\n  if (location.pathname === \"/\") {\r\n    label = \"Log In\";\r\n    disabled = true;\r\n  }\r\n  if (location.pathname.includes(\"schedule\")) {\r\n    label = \"Schedule\";\r\n    disabled = false;\r\n  }\r\n\r\n  const [drawerState, toggleDrawer] = useState(false);\r\n\r\n  useEffect(() => {\r\n    switch (location.pathname) {\r\n      case \"/dashboard/schedule\":\r\n        updateBoxes({ checkbox1: false, checkbox2: false });\r\n        break;\r\n      case \"/dashboard/schedule/s\":\r\n        updateBoxes({ checkbox1: true, checkbox2: false });\r\n        break;\r\n      case \"/dashboard/schedule/a\":\r\n        updateBoxes({ checkbox1: false, checkbox2: true });\r\n        break;\r\n      case \"/dashboard/schedule/s&a\":\r\n        updateBoxes({ checkbox1: true, checkbox2: true });\r\n        break;\r\n      default:\r\n        updateBoxes({ checkbox1: false, checkbox2: false });\r\n        break;\r\n    }\r\n  }, [drawerState, location.pathname]);\r\n\r\n  function handleClose() {\r\n    toggleDrawer(false);\r\n    if (location !== closeRedirect) history.push(closeRedirect.current);\r\n  }\r\n\r\n  function handleCheckbox() {\r\n    if (checkbox1.current.checked && checkbox2.current.checked) {\r\n      closeRedirect.current = \"/dashboard/schedule/s&a\";\r\n      updateBoxes({ checkbox1: true, checkbox2: true });\r\n    } else if (checkbox1.current.checked) {\r\n      closeRedirect.current = \"/dashboard/schedule/s\";\r\n      updateBoxes({ checkbox1: true, checkbox2: false });\r\n    } else if (checkbox2.current.checked) {\r\n      closeRedirect.current = \"/dashboard/schedule/a\";\r\n      updateBoxes({ checkbox1: false, checkbox2: true });\r\n    } else {\r\n      closeRedirect.current = \"/dashboard/schedule\";\r\n      updateBoxes({ checkbox1: false, checkbox2: false });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AppBar color=\"primary\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            disabled={disabled}\r\n            onClick={() => toggleDrawer(true)}\r\n          >\r\n            {menuIcon}\r\n          </IconButton>\r\n          <Typography variant=\"h6\">{label}</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <SwipeableDrawer\r\n        open={drawerState}\r\n        onOpen={() => toggleDrawer(true)}\r\n        onClose={() => handleClose()}\r\n        disableSwipeToOpen={disabled}\r\n      >\r\n        <List component=\"nav\">\r\n          <ListItem\r\n            button\r\n            selected\r\n            style={{\r\n              marginTop: \"20vh\",\r\n            }}\r\n            onClick={() => {\r\n              redirectTo(history, \"/dashboard/schedule\");\r\n              toggleDrawer(false);\r\n            }}\r\n          >\r\n            <CalendarViewDayIcon />\r\n            Schedule\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <Checkbox\r\n              inputRef={checkbox1}\r\n              onChange={() => handleCheckbox()}\r\n              checked={checkedBoxes.checkbox1}\r\n            />\r\n            Shifts\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <Checkbox\r\n              inputRef={checkbox2}\r\n              onChange={() => handleCheckbox()}\r\n              checked={checkedBoxes.checkbox2}\r\n            />\r\n            Availability\r\n          </ListItem>\r\n\r\n          <ListItem divider />\r\n          <ListItem\r\n            button\r\n            onClick={() => {\r\n              logOut(history);\r\n              toggleDrawer(false);\r\n            }}\r\n          >\r\n            <MeetingRoomIcon />\r\n            Log Out\r\n          </ListItem>\r\n        </List>\r\n      </SwipeableDrawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nCstAppBar.defaultProps = {\r\n  menuIcon: true,\r\n};\r\n\r\nexport default CstAppBar;\r\n","import React from \"react\";\r\n// import CstAppBar from \"./CstAppBar\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst LoginForm = () => {\r\n  const history = useHistory();\r\n  //Initial auto-authentication\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/login/isAuth\", {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((response) => {\r\n        return response.text();\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response !== \"false\") history.push(\"/dashboard/schedule/s\");\r\n      });\r\n  }, [history]);\r\n\r\n  //Submission\r\n  const [loginInfo, newLogin] = useState({\r\n    email: \"\",\r\n    pass: \"\",\r\n  });\r\n\r\n  const [loginError, updateLoginError] = useState(\"\");\r\n\r\n  function handleKeyPress(event) {\r\n    if (event.key === \"Enter\") {\r\n      handleSubmit();\r\n    }\r\n  }\r\n\r\n  function handleSubmit() {\r\n    const formData = {\r\n      loginEmail: loginInfo.email,\r\n      loginPass: loginInfo.pass,\r\n    };\r\n\r\n    if (validationStatus.validEmail && validationStatus.validPass) {\r\n      fetch(\"http://localhost:5000/login/process\", {\r\n        mode: \"cors\",\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(formData),\r\n      })\r\n        .then((response) => {\r\n          console.log(response.status);\r\n          if (response.status === 202)\r\n            return { response: response.json(), status: response.status };\r\n          else return response.text();\r\n        })\r\n        .then((response) => {\r\n          if (response.status === 202) {\r\n            updateLoginError(\"\");\r\n            history.push(\"/dashboard/schedule/s\");\r\n          } else updateLoginError(response);\r\n        });\r\n    }\r\n  }\r\n\r\n  function changeEmail(event) {\r\n    newLogin({ email: event.target.value, pass: loginInfo.pass });\r\n    if (fastValidation.email) validateInput();\r\n  }\r\n  function changePass(event) {\r\n    newLogin({ email: loginInfo.email, pass: event.target.value });\r\n    if (fastValidation.pass) validateInput();\r\n  }\r\n\r\n  //Input Validation\r\n  const [validationStatus, changeStatus] = useState({\r\n    validEmail: true,\r\n    emailError: \"\",\r\n    validPass: true,\r\n    passError: \"\",\r\n  });\r\n\r\n  const [fastValidation, enableFastValidation] = useState({\r\n    email: false,\r\n    pass: false,\r\n  });\r\n\r\n  const validateInput = () => {\r\n    if (!fastValidation.email)\r\n      enableFastValidation((prevState) => {\r\n        return { ...prevState, email: true };\r\n      });\r\n    if (!fastValidation.pass)\r\n      enableFastValidation((prevState) => {\r\n        return { ...prevState, pass: true };\r\n      });\r\n\r\n    if (loginInfo.email.indexOf(\"@\") > 0 && loginInfo.email.indexOf(\".\") > 2) {\r\n      changeStatus((prevState) => {\r\n        return { ...prevState, validEmail: true, emailError: \"\" };\r\n      });\r\n    } else\r\n      changeStatus((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          validEmail: false,\r\n          emailError: \"Please Enter a Valid Email\",\r\n        };\r\n      });\r\n\r\n    if (loginInfo.pass < 1)\r\n      changeStatus((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          validPass: false,\r\n          passError: \"Please Enter Your Password\",\r\n        };\r\n      });\r\n    else {\r\n      changeStatus((prevState) => {\r\n        return { ...prevState, validPass: true, passError: \"\" };\r\n      });\r\n    }\r\n  };\r\n\r\n  //Styling\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      paddingBottom: \"1.5em\",\r\n    },\r\n  });\r\n  const textboxStyles = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <section\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"Column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <form\r\n          id=\"login-form\"\r\n          aria-label=\"Login Form\"\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            width: \"90vw\",\r\n            marginTop: \"30vh\",\r\n            maxWidth: \"300px\",\r\n          }}\r\n        >\r\n          <TextField\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            className={textboxStyles.root}\r\n            autoFocus={true}\r\n            fullWidth={true}\r\n            inputProps={{\r\n              type: \"email\",\r\n              form: \"login-form\",\r\n              name: \"loginEmail\",\r\n            }}\r\n            onChange={changeEmail}\r\n            onBlur={validateInput}\r\n            error={!validationStatus.validEmail}\r\n            helperText={validationStatus.emailError}\r\n            aria-label=\"Email\"\r\n          />\r\n          <TextField\r\n            label=\"Passoword\"\r\n            variant=\"outlined\"\r\n            inputProps={{\r\n              type: \"password\",\r\n              form: \"loginForm\",\r\n              name: \"loginPass\",\r\n            }}\r\n            fullWidth={true}\r\n            onChange={changePass}\r\n            onBlur={validateInput}\r\n            onKeyPress={(event) => {\r\n              handleKeyPress(event);\r\n            }}\r\n            error={!validationStatus.validPass}\r\n            helperText={validationStatus.passError}\r\n            aria-label=\"Passoword\"\r\n            className={textboxStyles.root}\r\n          />\r\n\r\n          <Typography>{loginError}</Typography>\r\n\r\n          <Button\r\n            onClick={handleSubmit}\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"secondary\"\r\n            style={{\r\n              alignSelf: \"flex-end\",\r\n            }}\r\n          >\r\n            Log In\r\n          </Button>\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    borderTop: \"1px solid\",\r\n    borderColor: \"rgb(163, 149, 149, 0.56)\",\r\n    height: \"1.1em\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"left\",\r\n  },\r\n});\r\n\r\nconst Cell = React.forwardRef((props, ref) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className={classes.root} ref={ref}>\r\n        <div>{props.label}</div>\r\n      </div>\r\n      <div className={classes.root}></div>\r\n      <div className={classes.root}></div>\r\n      <div className={classes.root}></div>\r\n    </>\r\n  );\r\n});\r\n\r\nCell.defaultProps = {\r\n  label: \"\",\r\n};\r\n\r\nexport default Cell;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {\r\n  Typography,\r\n  Avatar,\r\n  CardActionArea,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FiberSmartRecordIcon from \"@material-ui/icons/FiberSmartRecord\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  availability: {\r\n    backgroundColor: \"#a4a4a4\",\r\n  },\r\n  shift: {\r\n    backgroundColor: theme.palette.secondary.light,\r\n  },\r\n}));\r\n\r\nfunction timeToNum(time) {\r\n  time = time.split(\":\");\r\n  return +time[0] + +time[1] / 60;\r\n}\r\n\r\nfunction compareDates(date1, date2) {\r\n  if (\r\n    date1.getDate() === date2.getDate() &&\r\n    date1.getMonth() === date2.getMonth() &&\r\n    date1.getFullYear() === date2.getFullYear()\r\n  )\r\n    return true;\r\n  else return false;\r\n}\r\n\r\nconst Event = (props) => {\r\n  const location = useLocation();\r\n  //const theme = useTheme();\r\n  const classes = useStyles();\r\n  const wrapper = useRef();\r\n\r\n  useEffect(() => {\r\n    checkLive();\r\n    if (compareDates(new Date(props.date), new Date(props.calendarDate))) {\r\n      switch (location.pathname) {\r\n        case \"/dashboard/schedule\":\r\n          wrapper.current.style.display = \"none\";\r\n          break;\r\n        case \"/dashboard/schedule/s\":\r\n          if (props.type === \"shift\") wrapper.current.style.display = \"flex\";\r\n          else wrapper.current.style.display = \"none\";\r\n          break;\r\n        case \"/dashboard/schedule/a\":\r\n          if (props.type === \"availability\")\r\n            wrapper.current.style.display = \"flex\";\r\n          else wrapper.current.style.display = \"none\";\r\n          break;\r\n        default:\r\n          wrapper.current.style.display = \"flex\";\r\n          break;\r\n      }\r\n    } else wrapper.current.style.display = \"none\";\r\n  });\r\n\r\n  useEffect(() => {\r\n    //console.log(wrapper.current.style.display);\r\n  }, [location.pathname]);\r\n\r\n  const [liveSession, toggleLive] = useState(false);\r\n  const currentTimeNum = timeToNum(\r\n    `${new Date().getHours()}:${new Date().getMinutes()}`\r\n  );\r\n\r\n  function checkLive() {\r\n    if (compareDates(new Date(props.date), new Date(props.calendarDate))) {\r\n      if (\r\n        timeToNum(props.startTime) <= currentTimeNum &&\r\n        timeToNum(props.endTime) > currentTimeNum\r\n      ) {\r\n        toggleLive(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={wrapper}\r\n      style={{\r\n        // display: `${displayControl(props.date, props.calendarDate)}`,\r\n        justifyContent: \"flex-end\",\r\n        width: \"70vw\",\r\n        marginRight: \"5vw\",\r\n        position: \"absolute\",\r\n        top: `${props.offset}px`,\r\n        height: `${props.bottom - props.offset}px`,\r\n        right: \"0%\",\r\n      }}\r\n    >\r\n      <Card\r\n        className={\r\n          props.type === \"availability\" ? classes.availability : classes.shift\r\n        }\r\n        style={{\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <CardContent style={{ padding: \"10px\" }}>\r\n          <Typography variant=\"h5\">\r\n            {props.startTime} - {props.endTime}\r\n          </Typography>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Avatar\r\n                variant=\"circular\"\r\n                style={{\r\n                  width: \"1.3em\",\r\n                  height: \"1.3em\",\r\n                  marginRight: \"0.5em\",\r\n                }}\r\n              >\r\n                J\r\n              </Avatar>\r\n              <Typography>John Smith</Typography>\r\n            </div>\r\n            <IconButton\r\n              style={{ display: props.type === \"shift\" ? \"inline\" : \"none\" }}\r\n            >\r\n              <ChevronRightIcon style={{ color: \"#9c64a6\" }} fontSize=\"large\" />\r\n            </IconButton>\r\n          </div>\r\n          <Typography\r\n            style={{ display: props.type === \"shift\" ? \"inline\" : \"none\" }}\r\n            variant=\"subtitle2\"\r\n          >\r\n            Placeholder Shift Details\r\n          </Typography>\r\n          {props.type === \"shift\" ? (\r\n            <CardActionArea\r\n              style={{\r\n                display: liveSession ? \"flex\" : \"none\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                paddingTop: \"0.5em\",\r\n              }}\r\n            >\r\n              <FiberSmartRecordIcon style={{ color: \"red\" }} fontSize=\"small\" />\r\n              <Typography style={{ color: \"red\" }}>Live Session</Typography>\r\n            </CardActionArea>\r\n          ) : (\r\n            <Typography>Unavailable to work</Typography>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Event;\r\n","import React, { useState } from \"react\";\r\nimport { Paper, IconButton, Typography } from \"@material-ui/core\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\n\r\nconst DateNav = (props) => {\r\n  const [date, updateDate] = useState(new Date());\r\n\r\n  const changeDate = props.changeDate; //This is to make ESLINT shut up\r\n\r\n  function handleDateUpdate(date, op) {\r\n    let placeholder = new Date(date);\r\n    if (op === \"-\")\r\n      placeholder = placeholder.setDate(placeholder.getDate() - 1);\r\n    else placeholder = placeholder.setDate(placeholder.getDate() + 1);\r\n    updateDate(new Date(placeholder));\r\n    changeDate(new Date(placeholder));\r\n  }\r\n  return (\r\n    <div>\r\n      <Paper\r\n        variant=\"outlined\"\r\n        square\r\n        style={{\r\n          height: \"10vw\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          onClick={() => {\r\n            handleDateUpdate(new Date(date), \"-\");\r\n          }}\r\n        >\r\n          <ArrowLeftIcon />\r\n        </IconButton>\r\n        <Typography>\r\n          {new Date(date).getDate()}/{new Date(date).getMonth() + 1}/\r\n          {new Date(date).getFullYear()}\r\n        </Typography>\r\n        <IconButton\r\n          onClick={() => {\r\n            handleDateUpdate(new Date(date), \"+\");\r\n          }}\r\n        >\r\n          <ArrowRightIcon />\r\n        </IconButton>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateNav;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport Cell from \"./subcomponents/Cell\";\r\nimport Event from \"./subcomponents/Event\";\r\nimport DateNav from \"./DateNav\";\r\n\r\n// let shifts = [\r\n//   { startTime: \"7:30\", endTime: \"8:30\", session_id: \"0\", date: \"2021-04-30\" },\r\n//   { startTime: \"9:45\", endTime: \"12:00\", session_id: \"1\", date: \"2021-04-29\" },\r\n// ];\r\n\r\n//Calculates how much an element should be offset based on time, so they appear\r\n//correctly on the time graph\r\nfunction calculatePosition(topLimit, bottomLimit, hours, minutes) {\r\n  const range = bottomLimit - topLimit;\r\n  const timeRange = 14;\r\n  let processedTime = hours + minutes / 60;\r\n\r\n  let position = (range * (processedTime - 7)) / timeRange;\r\n  position = position + topLimit;\r\n  return String(Math.round(position));\r\n}\r\n\r\nconst Calendar = (props) => {\r\n  const firstCell = useRef();\r\n  const lastCell = useRef();\r\n  let cellPos = useRef({\r\n    first: 0,\r\n    last: 0,\r\n  });\r\n\r\n  const [cellsRendered, toggleCellsRendered] = useState(false);\r\n\r\n  let lineTimer = useRef();\r\n  const [lineOffset, changeOffset] = useState(\"0\");\r\n  const [displayLine, toggleLine] = useState(\"inline\");\r\n\r\n  const [calendarDate, updateDate] = useState(new Date());\r\n\r\n  const [shifts, updateShifts] = useState([]);\r\n  let availabilityJSON = useRef([]);\r\n  let requestsJSON = useRef([]);\r\n\r\n  function initialCellsRender() {\r\n    if (!cellsRendered) {\r\n      toggleCellsRendered(true);\r\n      cellPos.current = {\r\n        first: firstCell.current.offsetTop,\r\n        last: lastCell.current.offsetTop,\r\n      };\r\n    }\r\n\r\n    if (\r\n      new Date(calendarDate).getDate() === new Date().getDate() &&\r\n      new Date(calendarDate).getMonth() === new Date().getMonth() &&\r\n      new Date(calendarDate).getFullYear() === new Date().getFullYear()\r\n    )\r\n      toggleLine(\"inline\");\r\n    else toggleLine(\"none\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    initialCellsRender();\r\n  });\r\n\r\n  useEffect(() => {\r\n    updateShifts(\r\n      buildEvents(availabilityJSON.current, \"availability\").concat(\r\n        buildEvents(requestsJSON.current, \"shift\")\r\n      )\r\n    );\r\n    // eslint-disable-next-line\r\n  }, [calendarDate]);\r\n\r\n  useEffect(() => {\r\n    changeOffset(\r\n      calculatePosition(\r\n        cellPos.current.first,\r\n        cellPos.current.last,\r\n        calendarDate.getHours(),\r\n        calendarDate.getMinutes()\r\n      )\r\n    );\r\n    updateLine();\r\n    requestEvents();\r\n    return () => clearTimeout(lineTimer.current);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  async function requestEvents() {\r\n    let availability;\r\n    let requests;\r\n    if (props.userType !== \"S\") {\r\n      availability = await fetch(\r\n        \"http://localhost:5000/database/availability\",\r\n        {\r\n          mode: \"cors\",\r\n          credentials: \"include\",\r\n          method: \"GET\",\r\n        }\r\n      );\r\n      availability = await availability.json();\r\n      availabilityJSON.current = availability;\r\n      updateShifts(buildEvents(availabilityJSON.current, \"availability\"));\r\n    }\r\n\r\n    requests = await fetch(\"http://localhost:5000/database/requests\", {\r\n      mode: \"cors\",\r\n      credentials: \"include\",\r\n      method: \"GET\",\r\n    });\r\n\r\n    requests = await requests.json();\r\n    requestsJSON.current = requests;\r\n    updateShifts((prev) => {\r\n      return prev.concat(buildEvents(requestsJSON.current, \"shift\"));\r\n    });\r\n  }\r\n\r\n  function buildEvents(shiftsArray, eventType) {\r\n    return shiftsArray.map((item) => {\r\n      let startTimeParsed = [\"\", \"\"];\r\n      let endTimeParsed = [\"\", \"\"];\r\n      if (item !== undefined || null) {\r\n        startTimeParsed =\r\n          eventType === \"availability\"\r\n            ? item.unavailableFrom.split(\":\")\r\n            : item.startTime.split(\":\");\r\n        endTimeParsed =\r\n          eventType === \"availability\"\r\n            ? item.unavailableTo.split(\":\")\r\n            : item.endTime.split(\":\");\r\n      }\r\n\r\n      return item !== null || undefined ? (\r\n        <Event\r\n          key={item.session_id.toString()}\r\n          startTime={`${startTimeParsed[0]}:${startTimeParsed[1]}`}\r\n          endTime={`${endTimeParsed[0]}:${endTimeParsed[1]}`}\r\n          date={\r\n            new Date(\r\n              eventType === \"availability\"\r\n                ? item.availableDate\r\n                : item.requestDate\r\n            )\r\n          }\r\n          calendarDate={calendarDate}\r\n          type={eventType}\r\n          offset={calculatePosition(\r\n            cellPos.current.first,\r\n            cellPos.current.last,\r\n            +startTimeParsed[0],\r\n            +startTimeParsed[1]\r\n          )}\r\n          bottom={calculatePosition(\r\n            cellPos.current.first,\r\n            cellPos.current.last,\r\n            +endTimeParsed[0],\r\n            +endTimeParsed[1]\r\n          )}\r\n        />\r\n      ) : null;\r\n    });\r\n  }\r\n\r\n  //Recursive function which updates the position of the red time indicator\r\n  //every minute\r\n  function updateLine() {\r\n    lineTimer.current = setTimeout(() => {\r\n      const DT = new Date();\r\n      console.log(\"updated line\");\r\n\r\n      //Disables the rd time indicator if the time is outside of the possible\r\n      //working hours\r\n      if (DT.getHours() > 21 || DT.getHours() < 7) toggleLine(\"none\");\r\n      else toggleLine(\"inline\");\r\n\r\n      changeOffset(\r\n        calculatePosition(\r\n          cellPos.current.first,\r\n          cellPos.current.last,\r\n          DT.getHours(),\r\n          DT.getMinutes()\r\n        )\r\n      );\r\n      updateLine();\r\n    }, 60000);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <hr\r\n        style={{\r\n          color: \"red\",\r\n          backgroundColor: \"red\",\r\n          height: \"2px\",\r\n          border: \"none\",\r\n          position: \"absolute\",\r\n          width: \"100%\",\r\n          margin: \"0\",\r\n          top: `${lineOffset}px`,\r\n          display: `${displayLine}`,\r\n        }}\r\n      />\r\n      <DateNav\r\n        changeDate={(date) => {\r\n          updateDate(new Date(date));\r\n        }}\r\n      />\r\n      <Cell label=\"7:00\" ref={firstCell} />\r\n      <Cell label=\"8:00\" />\r\n      <Cell label=\"9:00\" />\r\n      <Cell label=\"10:00\" />\r\n      <Cell label=\"11:00\" />\r\n      <Cell label=\"12:00\" />\r\n      <Cell label=\"13:00\" />\r\n      <Cell label=\"14:00\" />\r\n      <Cell label=\"15:00\" />\r\n      <Cell label=\"16:00\" />\r\n      <Cell label=\"17:00\" />\r\n      <Cell label=\"18:00\" />\r\n      <Cell label=\"19:00\" />\r\n      <Cell label=\"20:00\" />\r\n      <div id=\"placeholder\" ref={lastCell} />\r\n      {shifts}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React, { useRef } from \"react\";\r\n\r\nconst RequestForm = (props) => {\r\n  //Declare and initialise the variables\r\n  const startTime = useRef();\r\n  const endTime = useRef();\r\n  const day = useRef();\r\n  const month = useRef();\r\n  const year = useRef();\r\n  const practicalType = useRef();\r\n  const noteTakingType = useRef();\r\n  const details = useRef();\r\n\r\n  let timeOptions = [];\r\n  let dateOptions = [];\r\n  let hour = 6;\r\n  let minute = -15;\r\n  //Iterate through all the possible times\r\n  for (let i = 0; i < 49; i++) {\r\n    //Every fourth iteration, increment the hour\r\n    if (i % 4 === 0) {\r\n      hour++;\r\n    }\r\n\r\n    //Every iteration, increment the minute by 15 and append a new\r\n    //option to the HTML dropdown menu\r\n    minute = minute + 15;\r\n    if (minute > 45) minute = 0;\r\n    let HHMM;\r\n    if (minute !== 0) HHMM = `${hour}:${minute}`;\r\n    else HHMM = `${hour}:00`;\r\n    timeOptions.push(<option value={HHMM}>{HHMM}</option>);\r\n  }\r\n\r\n  for (let i = 1; i < 32; i++) {\r\n    dateOptions.push(<option value={i}>{i}</option>);\r\n  }\r\n\r\n  console.log(props.userType);\r\n\r\n  return (\r\n    <div>\r\n      <form action=\"http://localhost:5000/database/sendRequest\" method=\"POST\">\r\n        <label htmlFor=\"startTime\">Start Time</label>\r\n        <select name=\"startTime\" ref={startTime}>\r\n          {timeOptions}\r\n        </select>\r\n        <br />\r\n        <label htmlFor=\"endTime\">End Time</label>\r\n        <select name=\"endTime\" ref={endTime}>\r\n          {timeOptions}\r\n        </select>\r\n        <br />\r\n        <label htmlFor=\"dateDay\">Date:</label>\r\n        <select name=\"day\" ref={day}>\r\n          {dateOptions}\r\n        </select>\r\n        <select name=\"month\" id=\"monthDrop\" ref={month}>\r\n          <option value=\"01\">Jan</option>\r\n          <option value=\"02\">Feb</option>\r\n          <option value=\"03\">Mar</option>\r\n          <option value=\"04\">Apr</option>\r\n          <option value=\"05\">May</option>\r\n          <option value=\"06\">Jun</option>\r\n          <option value=\"07\">Jul</option>\r\n          <option value=\"08\">Aug</option>\r\n          <option value=\"09\">Sep</option>\r\n          <option value=\"10\">Oct</option>\r\n          <option value=\"11\">Nov</option>\r\n          <option value=\"12\">Dec</option>\r\n        </select>\r\n        <select name=\"year\">\r\n          <option value=\"2021\" ref={year}>\r\n            2021\r\n          </option>\r\n        </select>\r\n\r\n        <br />\r\n        <br />\r\n\r\n        {props.userType === \"S\" && (\r\n          <div>\r\n            <input type=\"checkbox\" ref={practicalType} name=\"practical-type\" />\r\n            <label htmlFor=\"practical-type\">Practical Support</label>\r\n\r\n            <br />\r\n\r\n            <input\r\n              type=\"checkbox\"\r\n              ref={noteTakingType}\r\n              name=\"note-taking-type\"\r\n            />\r\n            <label htmlFor=\"note-taking-type\">Note-Taking Support</label>\r\n\r\n            <br />\r\n            <br />\r\n\r\n            <textarea\r\n              style={{ maxWidth: \"95vw\", with: \"100vw\" }}\r\n              name=\"details\"\r\n              ref={details}\r\n              cols=\"53\"\r\n              rows=\"10\"\r\n              maxLength=\"1000\"\r\n              placeholder=\"Describe what you need help with...\"\r\n            ></textarea>\r\n          </div>\r\n        )}\r\n\r\n        <br />\r\n\r\n        <input type=\"submit\" value=\"Request\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RequestForm;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport RequestForm from \"./RequestForm\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Fab\r\n        size=\"large\"\r\n        style={{ position: \"fixed\", bottom: \"30px\", right: \"30px\" }}\r\n        onClick={handleClickOpen}\r\n        color=\"primary\"\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              New Request\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <RequestForm userType={props.userType} />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Calendar from \"./Calendar\";\r\nimport SlideMenu from \"./SlideMenu\";\r\n\r\nconst Schedule = () => {\r\n  const history = useHistory();\r\n\r\n  const [userType, updateUserType] = useState(null);\r\n  const [userTypeStr, updateUserTypeStr] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchIsAuth() {\r\n      let response = await fetch(\"http://localhost:5000/login/isAuth\", {\r\n        method: \"GET\",\r\n        mode: \"cors\",\r\n        credentials: \"include\",\r\n      });\r\n      if (response.status !== 202) history.push(\"/\");\r\n      else {\r\n        response = await response.text();\r\n        switch (response) {\r\n          case \"W\":\r\n            updateUserTypeStr(\"Worker\");\r\n            break;\r\n          case \"S\":\r\n            updateUserTypeStr(\"Student\");\r\n            break;\r\n          case \"A\":\r\n            updateUserTypeStr(\"Admin\");\r\n            break;\r\n          default:\r\n            updateUserTypeStr(\"\");\r\n            break;\r\n        }\r\n        updateUserType(response);\r\n      }\r\n    }\r\n    fetchIsAuth();\r\n  }, [history]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: \"10vh\",\r\n      }}\r\n    >\r\n      <h1>{userTypeStr}</h1>\r\n      {userType && <Calendar userType={userType} />}\r\n      <SlideMenu userType={userType} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Schedule;\r\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import { useState } from \"react\";\nimport CstAppBar from \"./components/CstAppBar.jsx\";\nimport LoginForm from \"./components/LoginForm\";\nimport Schedule from \"./components/Schedule\";\nimport SlideMenu from \"./components/SlideMenu\";\n\n//import { useHistory } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <CstAppBar />\n        <Switch>\n          <Route exact path=\"/\">\n            <LoginForm />\n          </Route>\n          <Route path=\"/dashboard/schedule\">\n            <Schedule />\n          </Route>\n          <Route path=\"/slide\">\n            <SlideMenu />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1a237e\",\n      light: \"#534bae\",\n      dark: \"#000051\",\n    },\n    secondary: {\n      main: \"#ce93d8\",\n      light: \"#ffc4ff\",\n      dark: \"#9c64a6\",\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}